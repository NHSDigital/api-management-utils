- name: add azure devops extension
  command: az extension add --name azure-devops

- name: set organization and project defaults
  shell: az devops configure --defaults organization="https://dev.azure.com/{{ ORG }}" project="{{ PROJECT }}"

- name: check if already logged in to az
  shell: az account show
  register: az_account_show

- name: login to azure
  shell: az login --allow-no-subscriptions
  when: az_account_show.rc != 0

- name: check pipelines folder
  shell: az pipelines folder list --path "/{{ PREFIX }}"
  register: cmd_check_pipeline_folder

- name: jsonify pipelines folder result
  set_fact:
    pipeline_folders: "{{ cmd_check_pipeline_folder.stdout | from_json }}"

- name: create pipelines folder
  shell: az pipelines folder create --path "/{{ PREFIX }}"
  when: pipeline_folders | length == 0

- name: create build pipeline
  shell: >
    az pipelines create
    --name "{{ PREFIX }}-Build"
    --repository {{ REPO }}
    --repository-type github
    --folder-path "/{{ PREFIX }}"
    --service-connection "{{ SERVICE_CONNECTION }}"
    --branch master
    --yaml-path azure/azure-build-pipeline.yml
    --skip-first-run true

- name: create pull request pipeline
  shell: >
    az pipelines create 
    --name "{{ PREFIX }}-Pull-Request" 
    --repository {{ REPO }} 
    --repository-type github 
    --folder-path "/{{ PREFIX }}" 
    --service-connection "{{ SERVICE_CONNECTION }}"
    --branch master
    --yaml-path azure/azure-pr-pipeline.yml
    --skip-first-run true

- name: create release pipeline
  shell: >
    az pipelines create 
    --name "{{ PREFIX }}-Release" 
    --repository {{ REPO }} 
    --repository-type github 
    --folder-path "/{{ PREFIX }}" 
    --service-connection "{{ SERVICE_CONNECTION }}"
    --branch master 
    --yaml-path azure/azure-release-pipeline.yml
    --skip-first-run true