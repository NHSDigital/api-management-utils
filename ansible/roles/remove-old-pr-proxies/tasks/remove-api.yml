
- name: "get api {{ api_slug }}"
  uri:
    url: "{{ apis_uri }}/{{ api_slug }}"
    headers:
      Authorization: "Bearer {{ APIGEE_ACCESS_TOKEN }}"
    return_content: yes
  register: get_api

- name: get api
  set_fact:
    api: "{{ get_api.json }}"

- name: "parse last modified {{ api_slug }}"
  set_fact:
    should_remove: >-
      {{
        (
          (
            (ansible_date_time.epoch | int) - (api.metaData.lastModifiedAt / 1000)
          ) / 3600
        ) >= (retain_hours | int)
      }}
    age_hours: >-
      {{
        (
          (
            (ansible_date_time.epoch | int) - (api.metaData.lastModifiedAt / 1000)
          ) / 3600
        )
      }}

- name: "debug vars {{ api_slug }}"
  debug:
    msg:
      - "api, {{ api_slug }}"
      - "modified at, {{ api.metaData.lastModifiedAt / 1000 }}"
      - "current_date, {{ ansible_date_time.epoch | int }}"
      - "age_hours, {{ age_hours }}"
      - "should remove,  {{ should_remove }}"

# - name: "remove api"
#   block:
#     - name: get api revisions
#       uri:
#         url: "{{ apis_uri }}/{{ api_slug }}/revisions"
#         headers:
#           Authorization: "Bearer {{ APIGEE_ACCESS_TOKEN }}"
#         return_content: yes
#       register: get_api_revisions

#     - name: undeploy revisions
#       include_tasks: undeploy-revision.yml
#       loop: "{{ get_api_revisions.json }}"
#       loop_control:
#         loop_var: "revision"
#         label: "undeploy - {{ api_slug }}:{{ revision }}"

#     - name: remove api from product
#       include_tasks: remove-api-product.yml
#       loop: "{{ api_products_map.get(api_slug, []) }}"
#       loop_control:
#         loop_var: "product_slug"
#         label: "detach - {{ api_slug }}:{{ product_slug }}"

#     - name: "removing api {{ api_slug }}"
#       uri:
#         url: "{{ apis_uri }}/{{ api_slug }}"
#         method: DELETE
#         headers:
#           Authorization: "Bearer {{ APIGEE_ACCESS_TOKEN }}"
#       changed_when: yes

#   when: should_remove
