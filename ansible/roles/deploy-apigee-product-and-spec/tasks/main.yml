- name: Set default product
  set_fact:
    default_product:
      name: "{{ SERVICE_NAME }}"
      displayName: "{{ PRODUCT_DISPLAY_NAME }}" # Environment name appended later
      description: "{{ PRODUCT_DESCRIPTION }}"
      approvalType: "{{ approval_type }}"
      proxies: "{{ proxies }}"
      attributes:
        - name: access
          value: public
        - name: ratelimit
          value: 5ps
      quota: 300
      quotaInterval: 1
      quotaTimeUnit: minute
      environments:
        - "{{ APIGEE_ENVIRONMENT }}"
      scopes: []

- name: Find API product files
  set_fact:
    # we are in dist/utils/ansible
    # want to look in dist/products
    api_product_files: "{{ lookup('fileglob', '../../products/*.yml').split(',') }}"

- name: Read API product files
  set_fact:
    api_products: >-
      {{ (api_products | default([])) + [lookup('file', filename) | from_yaml] }}
  loop: "{{ api_product_files }} "
  loop_control:
    loop_var: filename

- name: Assert that producer defined product(s) have 'name' but not 'environment'
  assert:
    that:
      - product.environment is not defined
      - product.name is defined
  loop: "{{ api_products }}"
  loop_control:
    loop_var: product

- name: Use default_product if api_products is empty
  set_fact:
    api_products: "{{ [default_product] }}"
  when: (api_products | default([]) | length) < 1

- name: Check all product names are unique
  assert:
    that:
      - "{{ api_products | map(attribute='name') | unique | count == api_products | count }}"
    fail_msg: "Error! API products defined in {{ api_product_files }} do not have unique name attributes."
    success_msg: "API Product names are unique."

- name: Deploy products
  include_tasks: deploy-product.yml
  loop: "{{ api_products }}"
  loop_control:
    loop_var: _product
