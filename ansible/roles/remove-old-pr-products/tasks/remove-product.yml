
- name: "get product {{ product_slug }}"
  uri:
    url: "{{ products_uri }}/{{ product_slug }}"
    headers:
      Authorization: "Bearer {{ APIGEE_ACCESS_TOKEN }}"
    return_content: yes
  register: get_product

- name: get product
  set_fact:
    product: "{{ get_product.json }}"

- name: "parse last modified {{ product_slug }}"
  set_fact:
    should_remove: >-
      {{
        (
          (
            (ansible_date_time.epoch | int) - (product.lastModifiedAt / 1000)
          ) / 3600
        ) >= (retain_hours | int)
      }}
    age_hours: >-
      {{
        (
          (
            (ansible_date_time.epoch | int) - (product.lastModifiedAt / 1000)
          ) / 3600
        )
      }}

- name: "debug vars {{ product_slug }}"
  debug:
    msg:
      - "product, {{ product_slug }}"
      - "modified at, {{ product.lastModifiedAt / 1000 }}"
      - "current_date, {{ ansible_date_time.epoch | int }}"
      - "age_hours, {{ age_hours }}"
      - "should remove,  {{ should_remove }}"

# - block:
#   - name: "remove product apps {{ product_slug }}"
#     uri:
#       url: "{{ developers_uri }}/{{ dev_id_to_email[item.developerId] }}/apps/{{ item.appName | urlencode }}/keys/{{ item.consumerKey }}/apiproducts/{{ product_slug }}"
#       method: DELETE
#       headers:
#         Authorization: "Bearer {{ APIGEE_ACCESS_TOKEN }}"
#     changed_when: yes
#     loop: "{{ product_app_map.get(product_slug, []) }}"
#     loop_control:
#       label: "app: {{ item.appName }} - {{ item.appId }}"

#   - name: "removing product {{ product_slug }}"
#     uri:
#       url: "{{ products_uri }}/{{ product_slug }}"
#       method: DELETE
#       headers:
#         Authorization: "Bearer {{ APIGEE_ACCESS_TOKEN }}"
#     changed_when: yes

#   when: should_remove

