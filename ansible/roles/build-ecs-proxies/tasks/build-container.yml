- name: set image_name fact
  set_fact:
    image_name: "{{ ecr_registry }}/{{ service_id }}_{{ item }}:{{ build_label }}"

- name: find most recent tag
  command: >
    {{ aws_cmd }} ecr describe-images --repository-name {{ service_id }}_{{ item }} --filter tagStatus=TAGGED --no-paginate
    --query 'imageDetails[0].imageTags[0]' --output text
  register: describe_images
  changed_when: no

- name: pull latest if exists - to ensure cache  {{ item }}
  docker_image:
    name: "{{ ecr_registry }}/{{ item }}:{{ describe_images.stdout }}"
    source: pull
  when: describe_images.stdout != 'None'
  ignore_errors: true
  no_log: true

- name: build and push ecr image {{ item }}
  docker_image:
    name: "{{ image_name }}"
    build:
      path: "{{ base_dir }}/{{ images_map[item].path }}"
      dockerfile: "{{ base_dir }}/{{ images_map[item].dockerfile }}"
      pull: yes
      # network: host
    source: build
    force_source: yes
    push: yes
    timeout: 300
