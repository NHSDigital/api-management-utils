- name: see if product already exists
  uri:
    url: "{{ apis_apiproducts_uri }}/{{ SERVICE_NAME }}"
    headers:
      Authorization: "Bearer {{ APIGEE_ACCESS_TOKEN }}"
    status_code: [200, 404] # 404 is a useful response, and we don't want to crash on it
    return_content: yes
  register: check_product_response

- name: decide whether to create or update
  set_fact:
    should_create: "{{ check_product_response.status == 404 }}"

- name: define method and uri
  set_fact:
    apiproduct_method: "{{ should_create | ternary('POST', 'PUT') }}"
    apiproduct_uri: "{{ should_create | ternary(apis_apiproducts_uri, apis_apiproducts_uri + '/' + SERVICE_NAME) }}"

- name: create or update product
  uri:
    url: "{{ apiproduct_uri }}"
    method: "{{ apiproduct_method }}"
    headers:
      Authorization: "Bearer {{ APIGEE_ACCESS_TOKEN }}"
    body_format: json
    body:
      name: "{{ SERVICE_NAME }}"
      displayName: "{{ PRODUCT_DISPLAY_NAME }} ({{ env_names[APIGEE_ENVIRONMENT] }} Environment)" 
      description: "{{ PRODUCT_DESCRIPTION }}" 
      approvalType: "{{ approval_type }}" 
      proxies: "{{ proxies }}"
      attributes:
        - name: access
          value: public
        - name: ratelimit
          value: 5ps
      quota: 300
      quotaInterval: 1
      quotaTimeUnit: minute
      environments:
        - "{{ APIGEE_ENVIRONMENT }}"
    status_code: [200, 201]

