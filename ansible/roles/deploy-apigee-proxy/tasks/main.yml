- name: zip proxy directory
  # Not using archive because we need the -X and -D options for it to produce the same hash every time
  shell: "cd {{ PROXY_DIR }} && zip -rXD9 /tmp/proxy.zip apiproxy"

- name: calculate proxy zip hash
  shell: "sha256sum /tmp/proxy.zip | cut -d' ' -f1"
  register: "hash"

- name: set proxy_hash
  set_fact:
    proxy_hash: "{{ hash.stdout }}"

# NOTE: this is left here as a caution in case anyone else tries this. Apigee will give you errors with this.
# Weirdly it's totally fine with curl.
# - name: upload proxy bundle
#   uri:
#     url: "{{ apis_api_uri }}?action=import&name={{ SERVICE_NAME }}-{{ APIGEE_ENVIRONMENT }}"
#     method: "POST"
#     headers:
#       Authorization: "Bearer {{ APIGEE_ACCESS_TOKEN }}"
#       Content-Type: "multipart/form-data"
#     src: "/tmp/proxy.zip"

- name: upload proxy bundle
  shell:
    cmd: "curl --fail -X POST -H 'Authorization: Bearer {{ APIGEE_ACCESS_TOKEN }}' -F 'file=@/tmp/proxy.zip' -H 'Content-Type: multipart/form-data' {{ apis_api_uri }}\\?action\\=import\\&name\\={{ SERVICE_NAME }}-{{ APIGEE_ENVIRONMENT }}"
    warn: false
  register: "proxy_upload_response"

- name: get revision number of upload
  set_fact:
    revision: "{{ (proxy_upload_response.stdout | from_json).revision }}"

- name: update proxy deployment
  uri:
    url: "{{ env_apis_api_uri }}/{{ SERVICE_NAME }}-{{ APIGEE_ENVIRONMENT }}/revisions/{{ revision }}/deployments"
    method: "POST"
    body:
      override: true
      delay: 60
    body_format: "form-urlencoded"
    headers:
      Authorization: "Bearer {{ APIGEE_ACCESS_TOKEN }}"
    timeout: 300 # This needs to be quite long because the request will hang for at least as long as the delay

- name: check deployed proxy is as expected
  shell: "echo check deployed proxy is as expected"
