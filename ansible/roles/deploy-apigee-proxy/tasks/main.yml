- name: create a temp dir for zipping the proxy
  tempfile:
    state: directory
  register: tempdir

- name: zip proxy directory
  # Not using archive because we need the -X and -D options for it to produce the same hash every time
  shell: "cd {{ PROXY_DIR }} && zip -rXD9 /{{ tempdir.path }}/proxy.zip apiproxy"
  changed_when: no

- name: upload the flow to apigee
  uri:
    url: "{{ apis_api_uri }}?action=import&name={{ SERVICE_NAME }}&validate=true"
    method: POST
    status_code: 201
    headers:
      authorization: "Bearer {{ APIGEE_ACCESS_TOKEN }}"
    body_format: form-multipart
    body:
      file:
        filename: "/{{ tempdir.path }}/proxy.zip"
        mime_type: application/octet-stream
    return_content: yes
  register: apigee_response
  retries: 2
  delay: 15
  until: (apigee_response.status|default(-1)) == 201

- name: get revision number of upload
  set_fact:
    revision: "{{ apigee_response.json.revision }}"

- name: update proxy deployment
  uri:
    url: "{{ env_apis_api_uri }}/{{ SERVICE_NAME }}/revisions/{{ revision }}/deployments"
    method: "POST"
    body:
      override: true
      delay: 60
    body_format: "form-urlencoded"
    headers:
      Authorization: "Bearer {{ APIGEE_ACCESS_TOKEN }}"
    timeout: 300 # This needs to be quite long because the request will hang for at least as long as the delay
  register: _resp
  retries: 3
  delay: 30
  until: _resp.status == 200

- name: ping deployed proxy
  uri:
    url: "{{ api_uri }}/_ping"
    return_content: yes
  register: proxy_ping_response
  when: PING

- name: set proxy_deployed_revision
  set_fact:
    proxy_deployed_revision: "{{ (proxy_ping_response.content | from_json).revision }}"
  when: PING

- name: check correct revision was deployed
  fail:
    msg: "Incorrect revision {{ proxy_deployed_revision }}, was expecting {{ revision }}"
  when: PING and proxy_deployed_revision != revision
