parameters:
  - name: apigee_deployments
    displayName: List of apigee deployments
    type: object
    default: []
  - name: service_name
    displayName: Service Name
    type: string
  - name: short_service_name
    displayName: Shortened version of the service name, usually initials
    type: string
  - name: service_base_path
    displayName: Service Base Path
    type: string
  - name: product_display_name
    displayName: Service Display Name
    type: string
  - name: product_description
    displayName: Description
    type: string
  - name: proxy_path
    displayName: Path to proxy directory from /proxies at the project root
    type: string
    default: live
  - name: deploy_review_sandbox
    displayName: Deploy review sandbox?
    type: boolean
    default: false
  - name: spec_file
    displayName: Path to OAS spec file for this service
    type: string
    default: ''
  - name: portal_api_requires_callback_url
    displayName: Does the portal api require a callback url? (only valid for deploy spec)
    default: true
  - name: make_spec_visible
    displayName: Make spec visible? (only valid if spec_file is specified)
    default: true
  - name: fully_qualified_service_name
    displayName: Supply a custom name for your release (only valid for release pipeline)
    type: string
    default: ''
  - name: ping
    displayName: Toggle ping endpoint avaliablility
    type: boolean
    default: true
  - name: jinja_templates
    type: object
    displayName:  Key/values for custom jinja templating
    default: []
  - name: secret_ids
    displayName: List of additional AWS Secrets Manager Secret IDs
    type: object
    default: []
  - name: config_ids
    displayName: List of additional AWS SSM Config IDs
    type: object
    default: []
  - name: pre_template
    displayName: Steps to run prior to templating
    type: stepList
    default: []
  - name: post_template
    displayName: Steps to run after templating
    type: stepList
    default: []
  - name: pre_deploy
    displayName: Steps to run prior to templating
    type: stepList
    default: []
  - name: post_deploy
    displayName: Steps to run after templating
    type: stepList
    default: []
  - name: _scoped_pipeline_vars
    type: object
    default:
      - service_name
      - short_service_name
      - service_base_path
      - product_display_name
      - product_description
      - fully_qualified_service_name
      - jinja_templates
      - proxy_path
  - name: _pipeline_defaults
    type: object
    default:
      - name_suffix: '-Pull-Request'
        deploy_template: pr.yml
        environments:
        - internal-dev
        - internal-dev-sandbox
      - name_suffix: '-Release'
        deploy_template: release.yml
        environments:
          - internal-dev
          - internal-dev-sandbox
          - internal-qa
          - internal-qa-sandbox
          - dev
          - ref
          - int
          - sandbox
          - prod

pool:
  vmImage: 'strutt/test_pipeline:latest'
      
extends:
  template: ./deploy-stages.yml
  parameters:
    ${{ each param in parameters }}:
      ${{ if notIn(param.key, 'apigee_deployments', '_scoped_pipeline_vars', '_pipeline_defaults') }}:
        ${{ if not(contains(join(',', parameters._scoped_pipeline_vars), param.key)) }}:
          ${{ param.key }}: ${{ param.value }}

    ${{ each pipeline_default in parameters._pipeline_defaults }}:
      ${{ if endsWith(variables['Build.DefinitionName'], pipeline_default.name_suffix) }}:
        deploy_template: ${{ pipeline_default.deploy_template }}

        # If apigee_deployments was specified, accept it regardless of which pipeline we are in
        ${{ if gt(length(parameters.apigee_deployments), 0) }}:
          apigee_deployments:
            - ${{ each apigee_deployment in parameters.apigee_deployments }}:
              - environment: ${{ apigee_deployment.environment }}
                stage_name: ${{ replace(coalesce (apigee_deployment.stage_name, apigee_deployment.environment), '-', '_') }}
                ${{ each var in parameters._scoped_pipeline_vars }}:
                  ${{ if apigee_deployment[var] }}:
                    ${{ var }}: ${{ apigee_deployment[var] }}
                  ${{ if not(apigee_deployment[var]) }}:
                    ${{ var }}: ${{ parameters[var] }}
                ${{ if not(apigee_deployment.depends_on) }}:
                  ${{ if startsWith(apigee_deployment.environment, 'internal-') }}:
                    depends_on: []
                  ${{ if not(startsWith(apigee_deployment.environment, 'internal-')) }}:
                    depends_on:
                      - internal_qa
                      - internal_qa_sandbox
                ${{ if apigee_deployment.depends_on }}:
                  depends_on: ${{ apigee_deployment.depends_on }}

        # otherwise set the default parameters for this pipeline
        ${{ if eq(0, length(parameters.apigee_deployments)) }}:
          apigee_deployments:
            - ${{ each environment in pipeline_default.environments }}:
              - environment: ${{ environment }}
                stage_name: ${{ replace(environment, '-', '_') }}
                ${{ if startsWith(environment, 'internal-') }}:
                  depends_on: []
                ${{ if not(startsWith(environment, 'internal-')) }}:
                  depends_on:
                    - internal_qa
                    - internal_qa_sandbox
                ${{ each var in parameters._scoped_pipeline_vars }}:
                  ${{ var }}: ${{ parameters[var] }}
