
parameters:
  - name: 'role'
    type: string
  - name: 'profile'
    type: string
    default: ''

steps:
    - template: ./aws-clean-config.yml

    - bash: |
        set -e

        aws_role="${{ parameters.role }}"
        echo "assume role: ${aws_role}"

        if [[ "${aws_role}" != aws:aws:iam:* ]]; then
            account_id="$(aws sts get-caller-identity --query Account --output text)"
            aws_role="arn:aws:iam::${account_id}:role/${aws_role}"
        fi

        cp ~/.aws/config.default ~/.aws/config
        tmp_file="$(Agent.TempDirectory)/.aws.tmp.creds.json"
        aws sts assume-role --role-arn "${aws_role}" --role-session-name build-assume-role > ${tmp_file}

        echo "aws_access_key_id = $(jq -r .Credentials.AccessKeyId ${tmp_file})" >> ~/.aws/config
        echo "aws_secret_access_key = $(jq -r .Credentials.SecretAccessKey ${tmp_file})" >> ~/.aws/config
        echo "aws_session_token = $(jq -r .Credentials.SessionToken ${tmp_file})" >> ~/.aws/config
      displayName: assume role
      condition: and(succeeded(), ne('${{ parameters.role }}', ''))

    - bash: |
        set -e
        echo as profile ${{ parameters.profile }}
        sed -i 's#[default]#[${{ parameters.profile }}]#g' ~/.aws/config
      displayName: rename profile
      condition: and(succeeded(), ne('${{ parameters.role }}', ''), ne('${{ parameters.profile }}', ''))