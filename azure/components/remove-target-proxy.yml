parameters:
  - name: apigee_org
    type: string
  - name: aws_account
    type: string
  - name: aws_profile
    type: string
  - name: service_name
    type: string
  - name: service_name_short
    type: string
  - name: has_ecs_backend
    type: boolean
  - name: APIGEE_ENVIRONMENT
    type: string
  - name: remove_ecs_build_role
    type: boolean

steps:
  - checkout: self
  - template: ./print-aws-info.yml

  - bash: make install
    displayName: Install project dependencies

  - template: ./aws-assume-role.yml
    parameters:
      role: auto-ops
      aws_account: ${{ parameters.aws_account }}
      profile: ${{ parameters.aws_profile }}

  - bash: |
      tfenv use 0.14.6
    displayName: setup terraform

  - template: ./get-aws-secrets-and-ssm-params.yml
    parameters:
      secret_ids:
        - ${{ parameters.aws_account }}/azure-devops/apigee-${{ parameters.apigee_org }}/APIGEE_OTP_KEY
        - ${{ parameters.aws_account }}/azure-devops/apigee-${{ parameters.apigee_org }}/APIGEE_PASSWORD
      config_ids:
        - /${{ parameters.aws_account }}/azure-devops/apigee-${{ parameters.apigee_org }}/APIGEE_USERNAME
      aws_account: ${{ parameters.aws_account }}

  - bash: |
      export MFA_CODE=`oathtool --totp -b "$(APIGEE_OTP_KEY)"`
      # basic auth value here is an apigee public value .. https://docs.apigee.com/api-platform/system-administration/management-api-tokens  (not secret)
      curl -X POST https://login.apigee.com/oauth/token \
      -H "Content-Type: application/x-www-form-urlencoded" \
      -H "Accept: application/json;charset=utf-8" \
      -H "Authorization: Basic ZWRnZWNsaTplZGdlY2xpc2VjcmV0" \
      -d "username=$(APIGEE_USERNAME)&password=$(APIGEE_PASSWORD)&mfa_token=${MFA_CODE}&grant_type=password" | jq .access_token > .token
      # Set token into variable
      echo "##vso[task.setvariable variable=secret.${{ upper(parameters.apigee_org) }}_API_ACCESS_TOKEN;issecret=true]`cat .token`"
    displayName: Get access token

  - bash: |
      set -euo pipefail
      export SERVICE_NAME="${{ parameters.service_name }}"
      export SERVICE_NAME_SHORT="${{ parameters.service_name_short }}"
      export has_ecs_backend="${{ parameters.has_ecs_backend }}"
      export APIGEE_ENVIRONMENT="${{ parameters.APIGEE_ENVIRONMENT }}"
      export APIGEE_ORG="nhsd-${{ parameters.apigee_org }}"
      export APIGEE_ACCESS_TOKEN="$(secret.${{ parameters.apigee_org }}_API_ACCESS_TOKEN)"
      export remove_ecs_build_role="${{ parameters.remove_ecs_build_role }}"
      ANSIBLE_FORCE_COLOR=yes make -C ansible remove-target-proxy
    displayName: "Cleanup target portal apis"
 
