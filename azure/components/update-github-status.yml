parameters:
  - name: state
    displayName: State
    type: string
    values:
      - pending  # A build is underway
      - success  # A build succeeded
      - failure  # A build failed in an expected way, e.g. the tests failed
      - error    # A build finishes for an unexpected reason, e.g. error in bash step, bad config
  - name: description
    displayName: Description
    type: string
  # Been through a lot of pain to try to get these next two to work. Unfortunately due to how templates
  # are expanded, flagging like this is the only way I could find to get it to evaluate properly
  - name: on_success
    displayName: Only execute if pipeline is successful
    type: boolean
    default: false
  - name: on_failure
    displayName: Only execute if pipeline fails
    type: boolean
    default: false

steps:
  - bash: |
      curl --fail -q -X POST "https://api.github.com/repos/$(Build.Repository.Name)/statuses/$(Build.SourceVersion)" -d '{"state": "${{ parameters.state }}", "context": "$(Build.DefinitionName)", "description": "${{ parameters.description }}", "target_url": "https://dev.azure.com/NHSD-APIM/API%20Platform/_build/results?buildId=$(Build.BuildID)"}' --user $(GITHUB_USER):$(GITHUB_ACCESS_TOKEN)
    displayName: "Notify GitHub that the pipeline has started"
    condition: |
      or(
        and(
          eq(${{ parameters.on_success }}, false),
          eq(${{ parameters.on_failure }}, false)
        ),
        and(
          eq(${{ parameters.on_success }}, true),
          eq(${{ parameters.on_success }}, succeeded())
        ),
        and(
          eq(${{ parameters.on_failure }}, true),
          eq(${{ parameters.on_failure }}, failed())
        )
      )
