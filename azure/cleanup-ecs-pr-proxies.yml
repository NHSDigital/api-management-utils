name: "$(SourceBranchName)+$(BuildID)"

trigger: none
pr: none

schedules:
  - cron: "0 2 * * *"
    displayName: Daily PR cleanup
    branches:
      include:
        - master
    always: true

jobs:
  - job: build
    displayName: Cleanup ECS PR Proxies
    timeoutInMinutes: 360
    pool:
      name: 'AWS-ECS'

    workspace:
      clean: all

    steps:

      - checkout: self

      - bash: |
          instance_id="$(curl -s http://169.254.169.254/latest/meta-data/instance-id)"
          echo instance-id: "${instance_id}"
          echo connect to: https://eu-west-2.console.aws.amazon.com/systems-manager/session-manager/${instance_id}
          echo sudo su - ubuntu
          or
          echo ssh ubuntu@${instance_id}
          echo working directory: $(System.DefaultWorkingDirectory)
        displayName: print aws info

      - bash: |
          tfenv use 0.14.6
        displayName: setup terraform

      - bash: |
          make install
        displayName: install dependencies

      - template: ./components/aws-assume-role.yml
        parameters:
          role: "auto-ops"
          profile: "apm_ptl"

      - bash: |
          export retain_hours=72
          sleep 90
          ANSIBLE_FORCE_COLOR=yes make -C ansible remove-old-ecs-pr-deploys > /tmp/err.txt
          ERROR_CODE=$?
          ROLE_TIMEOUT_MSG="The AWS assume role session token is due to expire"
          if grep -q "$ROLE_TIMEOUT_MSG" /tmp/err.txt ; then
            echo "stderr for ansible has the error \"$ROLE_TIMEOUT_MSG\""
            echo "Re-assuming role and re-running step"
            echo "##vso[task.setvariable variable=has_aws_role_timedout;]true"

          elif [ $ERROR_CODE -ne 0 ] ; then 
            echo "ansible has unhandled error, re-raising"
            >&2 cat /tmp/err.txt
            exit -1
          fi
          cat /tmp/err.txt

        displayName: "cleanup older pr deploys"

      - template: ./components/aws-assume-role.yml
        parameters:
          role: "auto-ops"
          profile: "apm_ptl"

      - bash: |
          export retain_hours=72
          ANSIBLE_FORCE_COLOR=yes make -C ansible remove-old-ecs-pr-deploys
        displayName: "retry cleanup older pr deploys on session role timeout"
        condition: eq(variables['has_aws_role_timedout'], 'true')

